version: "3.8"

services:
  web:
    restart: on-failure
    container_name: name
    build: 
      context: ./
      dockerfile: Dockerfile.prod
    image: mcoquet2/name_app:web
    volumes:
      - ./static:/static
    ports:
      - ${NAME_PORT}:${NAME_PORT}
    expose:
      - ${NAME_PORT}
    env_file:
      - ./env/.env.prod
    entrypoint: ["./entrypoint.prod.sh"]
    networks:
      - app-network
      - nginx-network

  celery:
    restart: always
    build: 
      context: ./
      dockerfile: Dockerfile.prod
    image: mcoquet2/name_app:celery
    env_file:
      - ./env/.env.prod
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
      - DB_HOST=${POSTGRES_HOST}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_NAME}
    entrypoint: ["./celery_entrypoint.sh"]
    networks:
      - app-network 

  redis:
    image: redis:6.0-buster
    ports:
      - "6379"
    networks:
      - app-network
    expose: 
      - "6379"
      
  nginx:
    build: 
      context: ./
      dockerfile: Dockerfile.prod
    image: nginx
    volumes:
      - ./static:/static
    ports:
      - "443:443"
      - "80:80"
    expose:
      - "443"
      - "80"
    entrypoint: ["./nginx_entrypoint.prod.sh"]
    networks: 
      - nginx-network

networks:
  app-network:
    driver: bridge
  nginx-network:
    driver: bridge
